{"version":3,"file":"static/js/Home.e9915db6.chunk.js","mappings":"wOAGMA,EAAa,IAAIC,EAAAA,EACR,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAaA,IAZAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,WAEVP,EAAWS,cAAcC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC3BA,EAAKC,QAAQC,OAAS,GACxBR,EAASM,EAAKC,SACdL,EAAU,aAEVA,EAAU,iBAGb,IACY,aAAXD,EACF,OAAO,SAAC,IAAD,CAAeF,MAAOA,M,4GClBjC,SAASU,EAAT,GAAmC,IAAVV,EAAS,EAATA,MACvB,OACE,iCACE,4CACA,wBACGA,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,eAAaC,UAAWC,EAAAA,EAAAA,KAAxB,UACE,SAAC,KAAD,CACEC,GAAE,iBAAYJ,GACdE,UAAWC,EAAAA,EAAAA,KACXE,MAAO,CAAEC,SAAU,KAHrB,SAKGL,KANID,WAcnB,SAASO,EAAT,GAAwC,IAAjBnB,EAAgB,EAAhBA,MAAOoB,EAAS,EAATA,MAC5B,OACE,+BACE,wBACGpB,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,eAAaC,UAAWC,EAAAA,EAAAA,KAAxB,UACE,SAAC,KAAD,CACEC,GAAE,UAAKJ,GACPE,UAAWC,EAAAA,EAAAA,KACXE,MAAO,CAAEC,SAAS,iBAAD,OAAmBE,IAHtC,SAKGP,KANID,Y,0GC3BbS,EAAQC,EAAAA,MAAAA,QACOzB,EAAAA,WACnB,cAAe,eACb0B,KAAKC,IAAM,4CACXD,KAAKE,SAAW,6BAChBF,KAAKG,SAAW,uCAChBH,KAAKI,OAAS,gBAEdJ,KAAKK,cAAgB,4BACrBL,KAAKM,YAAc,4BACnBN,KAAKO,YAAc,GAwCpB,OAvCA,sEACD,oGACyBT,EAAMU,IAAN,UAClBR,KAAKE,SADa,2BACcF,KAAKC,MAF5C,cACQQ,EADR,yBAISA,GAJT,kGADC,IACD,gEAOA,WAAsBpB,GAAtB,uFAC6BS,EAAMU,IAAN,UACtBR,KAAKE,SADiB,oBACGb,GADH,OACQW,KAAKC,MAF1C,cACQS,EADR,yBAISA,GAJT,mGAPA,IAOA,kEAMA,oGACiCZ,EAAMU,IAAN,UAC1BR,KAAKE,SADqB,0BACKF,KAAKC,IADV,kBACuBD,KAAKO,cAF7D,cACQI,EADR,yBAISA,GAJT,kGANA,IAMA,8DAOA,WAAoBtB,GAApB,uFAC8BS,EAAMU,IAAN,UACvBR,KAAKE,SADkB,oBACEb,EADF,mBACeW,KAAKC,MAFlD,cACQW,EADR,yBAISA,GAJT,mGAPA,IAOA,gEAOA,WAAsBvB,GAAtB,uFACgCS,EAAMU,IAAN,UACzBR,KAAKE,SADoB,oBACAb,EADA,mBACaW,KAAKC,MAFlD,cACQY,EADR,yBAISA,GAJT,mGAPA,IAOA,iBAMA,WACE,OAAOb,KAAKO,aACb,IACD,SAAUO,GACRd,KAAKO,YAAcO,MACpB,EAjDkBxC","sources":["components/Homepage.jsx","components/RenderFilms.jsx","services/ApiService.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport ApiService from '../services/ApiService';\nimport { TrendingFilms } from './RenderFilms';\nconst apiService = new ApiService();\nexport default function HomePage() {\n  const [films, setFilms] = useState(null);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    setStatus('pending');\n\n    apiService.fetchMovies().then(({ data }) => {\n      if (data.results.length > 0) {\n        setFilms(data.results);\n        setStatus('resolved');\n      } else {\n        setStatus('rejected');\n      }\n    });\n  }, []);\n  if (status === 'resolved') {\n    return <TrendingFilms films={films} />;\n  }\n}\n","import { Link } from 'react-router-dom';\nimport s from '../components/movies.module.css';\nfunction TrendingFilms({ films }) {\n  return (\n    <>\n      <h1>Trending films</h1>\n      <ul>\n        {films.map(({ id, original_title }) => (\n          <li key={id} className={s.film}>\n            <Link\n              to={`movies/${id}`}\n              className={s.link}\n              state={{ pathname: '/' }}\n            >\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\nfunction RenderFilms({ films, query }) {\n  return (\n    <>\n      <ul>\n        {films.map(({ id, original_title }) => (\n          <li key={id} className={s.film}>\n            <Link\n              to={`${id}`}\n              className={s.link}\n              state={{ pathname: `/movies?query=${query}` }}\n            >\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport { TrendingFilms, RenderFilms };\n","const axios = require('axios').default;\nexport default class ApiService {\n  constructor() {\n    this.key = '?api_key=4177e902090c804b976fbf3cfd72131d';\n    this.BASE_URL = 'https://api.themoviedb.org';\n    this.trending = '/trending/{media_type}/{time_window}';\n    this.search = '/search/movie';\n\n    this.movieCreadits = '/movie/{movie_id}/credits';\n    this.movieReview = '/movie/{movie_id}/reviews';\n    this.searchQuery = '';\n  }\n  async fetchMovies() {\n    const response = await axios.get(\n      `${this.BASE_URL}/3/movie/popular${this.key}`\n    );\n    return response;\n  }\n\n  async fetchMoviesById(id) {\n    const responceById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}${this.key}`\n    );\n    return responceById;\n  }\n  async fetchMoviesByName() {\n    const fetchMovieByName = await axios.get(\n      `${this.BASE_URL}/3/search/movie${this.key}&query=${this.searchQuery}`\n    );\n    return fetchMovieByName;\n  }\n\n  async fetchCastById(id) {\n    const fetchCastById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/credits${this.key}`\n    );\n    return fetchCastById;\n  }\n\n  async fetchReviewById(id) {\n    const fetchReviewById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/reviews${this.key}`\n    );\n    return fetchReviewById;\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n"],"names":["apiService","ApiService","HomePage","useState","films","setFilms","status","setStatus","useEffect","fetchMovies","then","data","results","length","TrendingFilms","map","id","original_title","className","s","to","state","pathname","RenderFilms","query","axios","require","this","key","BASE_URL","trending","search","movieCreadits","movieReview","searchQuery","get","response","responceById","fetchMovieByName","fetchCastById","fetchReviewById","newQuery"],"sourceRoot":""}